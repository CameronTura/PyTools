 __      __             __   __  
/  ` __ /__` |__|  /\  |__) |__) 
\__,    .__/ |  | /~~\ |  \ |    
                                
###################################################################################################################

>>> Create New Project Using Console:

  Go to docuemnts folder:
  --> cd Documents

  Create Dotnet:
  --> dotnet new console -o appname
  
  Open project:
  --> code .          (Need to be in the "myapp" directory)
  
  
###################################################################################################################

>>> Starter Content:

using System;

namespace HelloWorld
{
  class Program
  {
    static void Main()
    {
      //Code Goes Here 
    }
  }
}
 
###################################################################################################################

 __  ___  __          __   __  
/__`  |  |__) | |\ | / _` /__` 
.__/  |  |  \ | | \| \__> .__/ 
                               
>>> Strings:

  Console.Write("Hello");                               --> Hello (No new line)
  
  Console.WriteLine("Hello World!");                    --> Hello World!
 
  string x = "Hello";
  string y = "World!";
  Console.WriteLine("{0} {1}", x, y);                   --> Hello World! 
  
###################################################################################################################

        __       ___  __  
| |\ | |__) |  |  |  /__` 
| | \| |    \__/  |  .__/ 
                          
>>> User String Input:

  string x = Console.ReadLine();
  Console.WriteLine("Hello {0}", x);                    --> Hello {UserName}
  
________________________________________________________
  
>>> User Int Input:
  
  int x = Convert.ToInt32(Console.ReadLine());
  Console.WriteLine(x + 5);                             --> {x + 5}
  
________________________________________________________

>>> User Double Input:


  double x = Convert.ToDouble(Console.ReadLine());
  Console.Writeline(x + 2.5);                           --> {x + 2.5}
________________________________________________________

>>> User Bool Input

  int x = Convert.ToInt32(Console.ReadLine());          (user input = 3)
  bool y = Convert.ToBoolean(x);
  Console.WriteLine("{0} as a Boolean = {1}.", x, y);   --> "3 as a Boolean = True"
  
  or:
  
  bool x = Convert.ToBoolean(Convert.ToInt32(Console.ReadLine()));
  Console.WriteLine(x);                                 --> True
  
  
###################################################################################################################

       ___ 
| |\ |  |  
| | \|  |  
           
>>> Int:

Console.WriteLine(6 + 4);               --> 10
Console.WriteLine(6 - 4);               --> 2
Console.Writeline(6 * 4);               --> 24
Console.WriteLine(6 / 4);               --> 1
Console.WriteLine(6 % 4);               --> 2 (returns the remainder)

________________________________________________________

x += 3; // equivalent to x = x + 3
x *= 8; // equivalent to x = x * 8
x /= 5; // equivalent to x = x / 5
x %= 2; // equivalent to x = x % 2
x++;    // equivalent to x = x + 1                      (uses the x value, then increments it)
++x;    // increments x's value then uses it
x--;    // equivalent to x = x - 1                      (uses the x value, then decreases it)
--x;    // decreases x's value then uses it

###################################################################################################################

 __   __             ___  __   __     __        __  
/  ` /  \ |\ | \  / |__  |__) /__` | /  \ |\ | /__` 
\__, \__/ | \|  \/  |___ |  \ .__/ | \__/ | \| .__/ 
                                                    
>>> Conversions:

Convert.ToString()
Convert.ToInt32()
Convert.ToDouble()
Convert.ToBoolean()
________________________________________________________

  double doubleNum = 3.14;
  bool boolNum = System.Convert.ToBoolean(doubleNum);
  Console.WriteLine("{0} as a Boolean = {1}.", doubleNum, boolNum);
 
________________________________________________________
 

###################################################################################################################
 
 __   __        __  ___           ___  __  
/  ` /  \ |\ | /__`  |   /\  |\ |  |  /__` 
\__, \__/ | \| .__/  |  /~~\ | \|  |  .__/ 
                                           
>>> Constants:

-To store a value that cannot be changed from their initial assignment.

const double PI = 3.14; 

--> Any attempt to change PI will result in an error


###################################################################################################################

   ___     __  ___      ___  ___        ___      ___  __  
| |__     /__`  |   /\   |  |__   |\/| |__  |\ |  |  /__` 
| |       .__/  |  /~~\  |  |___  |  | |___ | \|  |  .__/ 
                                                          
>>> If Statements:

static void Main()
{
    int x = 23;
    int y = 12;
      
    if (x > y)
    {
        Console.WriteLine("x is bigger than y");
    }
    else
    {
        Console.WriteLine("y is bigger than x");
    }
}

--> x is bigger than y

________________________________________________________

Operators:
  6 == 4  ==  False;
  6 >= 4  ==  True;
  6 <= 4  ==  False;
  6 != 4  ==  True;
  
Logical Operators:
  && == AND
  || == OR
  ! == NOT
  
________________________________________________________  
  
NOT operator:
  
if (!(1 > 2))
{
    Console.WriteLine("1 is smaller than 2");
}
--> 1 is smaller than 2

###################################################################################################################

 __         ___  __       
/__` |  | |  |  /  ` |__| 
.__/ |/\| |  |  \__, |  | 
                          
>>> Switch

- The switch statement provides a more elegant way to test a variable against a list of values.

static void Main(string[] args)
{
    int num = 2;
    switch (num)
    {
        case 1:
            Console.WriteLine("one");
            break;
        case 2:
            Console.WriteLine("two");
            break;
        case 3:
            Console.WriteLine("three");
            break;
        default:
            Console.Writeline("The number is not one of the cases")
    }
}

--> two

###################################################################################################################

                  ___          __   __   __   __  
|  | |__| | |    |__     |    /  \ /  \ |__) /__` 
|/\| |  | | |___ |___    |___ \__/ \__/ |    .__/ 
                                                  
>>> While Loops

- A while loop repeatedly executes a block of code as long as a given condition is true.

static void Main(string[] args)
{
    int number = 3;
    while(number >= 0)
    {
        Console.WriteLine(number);
        number--;
    }
}

--> 3
    2
    1
    0
    
###################################################################################################################

 __   __                       ___ 
|  \ /  \ __ |  | |__| | |    |__  
|__/ \__/    |/\| |  | | |___ |___ 
                                   
>>> Do-While

- A do-while loop is similar to a while loop, except that a do-while loop is guaranteed to execute at least one time
- Even if the condition of the do-while loop evaluates to false, the statements in the do will still run once:

static void Main(string[] args)
{
    int a = 0;
    do
    {
        Console.WriteLine(a);
        a++;
    } 
    while(a < 5);
}

--> 0
    1
    2
    3
    4

###################################################################################################################

 ___  __   __           __   __   __   __  
|__  /  \ |__)    |    /  \ /  \ |__) /__` 
|    \__/ |  \    |___ \__/ \__/ |    .__/ 
                                           
>>> For loops (Range)

- A for loop executes a set of statements a specific number of times

________________________________________________________

for ( value; condition; increment ) 
{
  statement(s);
}
________________________________________________________

static void Main(string[] args)
{
    for (int x = 1; x < 4; x++)
    {
        Console.WriteLine(x);
    }
}

--> 1
    2
    3
________________________________________________________

static void Main(string[] args)
{
    int y = 1;
    for ( ; y < 4; )
    {
        Console.WriteLine(y);
        y++;
    }
}

--> 1
    2
    3
    
________________________________________________________

Continue:

for(int i = 0; i < 5; i++)
{
    if(i == 3)
        continue;
        
    Console.WriteLine(i);
}

--> 0
    1
    2
    4

________________________________________________________

Break:

fo(int i = 0; i <5; i++)
{
    if(i == 3)
        break;
    
    Console.WriteLine(i);
}

--> 0
    1
    2

###################################################################################################################






