
 _____       __     ______     __   __     ______     ______    
/\  __-.    /\ \   /\  __ \   /\ "-.\ \   /\  ___\   /\  __ \   
\ \ \/\ \  _\_\ \  \ \  __ \  \ \ \-.  \  \ \ \__ \  \ \ \/\ \  
 \ \____- /\_____\  \ \_\ \_\  \ \_\\"\_\  \ \_____\  \ \_____\ 
  \/____/ \/_____/   \/_/\/_/   \/_/ \/_/   \/_____/   \/_____/ 
                                                                

#################################################################################################################

In-depth    --      https://www.youtube.com/watch?v=sm1mokevMWk
Quickstart  --      https://www.youtube.com/watch?v=ZsJRXS_vrw0

#################################################################################################################

>>> Set Up

--> Go to directory on cmd/terminal
_______________________________________

django-admin startproject ProjectName                       --> Creates a folder within the directory named "ProjectName"
                                                            --> Move into the "ProjectName" directory on cmd/terminal

_______________________________________

python manage.py startapp AppName                           --> creates a new app (webpage view) with the name "AppName"

_______________________________________

python manage.py makemigrations
python manage.py migrate                                    --> propagating changes you make to your models

_______________________________________

python manage.py runserver                                  --> creates a local server website using the "manage.py" file       ( ctrl + c to stop)
        
        
        
#################################################################################################################

      __   __            __   __   ___       __  
 /\  |__) |__)     |\/| /  \ |  \ |__  |    /__` 
/~~\ |    |        |  | \__/ |__/ |___ |___ .__/ 
                                                 
>>> App Models.py
- A model is the single, definitive source of information about your data. 
- It contains the essential fields and behaviors of the data youâ€™re storing. Generally, each model maps to a single database table.

- https://docs.djangoproject.com/en/4.1/ref/models/fields/

_______________________________________

from django.db import models
import string
import random

def code_gen():
    length = 5

    while True:
        code1 = "".join(random.choices(string.ascii_uppercase, k = length))
        if Room.objects.filter(code = code1).count() == 0:
            break
    
    return code1


# Create your models here.
class Room(models.Model):
    code = models.CharField(max_length=7, default="", unique=True)
    host = models.CharField(max_length=25, unique=True)
    guest_can_pause = models.BooleanField(null = False, default=False)
    votes_to_skip = models.IntegerField(null = False, default=1)
    created_at = models.DateTimeField(auto_now_add=True)

__________________________________________________________________________________________________________

      __   __           __        __  
 /\  |__) |__)    |  | |__) |    /__` 
/~~\ |    |       \__/ |  \ |___ .__/ 
                                      
>>> App Urls.py
- Does not come included when making a new app

_______________________________________

from django.urls import path
from .views import RoomView

urlpatterns = [ 
path("home/", RoomView.as_view()),]  

__________________________________________________________________________________________________________

      __   __      __   ___  __                __  ___  __   __  
 /\  |__) |__)    /__` |__  |__) |  /\  |    |  / |__  |__) /__` 
/~~\ |    |       .__/ |___ |  \ | /~~\ |___ | /_ |___ |  \ .__/ 
                                                                 
>>> App Serializers.py
- Does not come included when making a new app
- Used to parse date from Models.py into this, then return the data into a readable (string) format 

_______________________________________

from rest_framework import serializers
from .models import Room

class RoomSerializer(serializers.ModelSerializer):
    class Meta:
        model = Room
        fields = ("id", "code", "host", "guest_can_pause", "votes_to_skip", "created_at" )  # --> "id", an unique id is generated for each room created

__________________________________________________________________________________________________________

      __   __             ___       __  
 /\  |__) |__)    \  / | |__  |  | /__` 
/~~\ |    |        \/  | |___ |/\| .__/ 
                                        
>>> App Views.py

from django.shortcuts import render
from rest_framework import generics
from .serializers import RoomSerializer
from .models import Room

# Create your views here.

class RoomView(generics.CreateAPIView):
    queryset = Room.objects.all()
    serializer_class = RoomSerializer


#################################################################################################################

 __    ___  ___                  ___     __   ___ ___ ___         __   __  
/__` |  |  |__  |\ |  /\   |\/| |__     /__` |__   |   |  | |\ | / _` /__` 
.__/ |  |  |___ | \| /~~\  |  | |___    .__/ |___  |   |  | | \| \__> .__/ 
                                                                           
>>> SiteName Settings.py

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'AppName.apps.ApiConfig',                                               # --> add the AppName.apps.ApiConfig to add the app to the project
    'rest_framework',                                                       # --> +'rest_framework' to add REST into the project
]

__________________________________________________________________________________________________________

 __    ___  ___                  ___          __        __  
/__` |  |  |__  |\ |  /\   |\/| |__     |  | |__) |    /__` 
.__/ |  |  |___ | \| /~~\  |  | |___    \__/ |  \ |___ .__/ 
                                                            
>>> SiteName Urls.py
- https://docs.djangoproject.com/en/4.1/topics/http/urls/


from django.urls import include, path                                       # --> import "path" and "include"

urlpatterns = [
    path('admin/', admin.site.urls),                                        # --> the site url + 'admin/' look for the admin site information
    path('home/', include("main.urls")),                                    # --> the site url + 'home/' goes to app Urls.py to look for the site information
]
__________________________________________________________________________________________________________
        

