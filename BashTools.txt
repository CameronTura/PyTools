BashTools
==========

echo "Hello World!"                         --> much like the "print" command in python

cat filename.txt                            --> view the filename.txt file

___________________________________________________________

ls

ls -l                                       --> -l includes extra information ( permissions / size / user / date / name)

ls -la                                      --> same as -l but also shows hidden files

___________________________________________________________


mkdir dirname                               --> makes namae directory named "dirname"

cd dirname                                  --> changes current directory to "dirname"

cd ..                                       --> changes to the previous directory

pwd                                         --> Print current working directory

rmdir dirname/                              --> deletes the "dirname" directory 
                                                (must be in the parent directory) 
                                                (one being deleted must be empty )

___________________________________________________________


touch myfile.txt                            --> creates a new txt file named "myfile"

mv myfile.txt newfile.txt                   --> renames "myfile.txt" to "newfile.txt"

chmod                                       --> change the properties of a file

___________________________________________________________


rm filename.txt                             --> deletes "filename.txt"

rm *                                        --> deletes all in the current directory

___________________________________________________________


cp                                          --> copy / paste

cp filename.txt anotherfile.txt             --> creates a copy of "filename.txt" named "anotherfile.txt"

cp ../filename.txt .                        --> finds "filename.txt" in the parent directory and places it in the current directory

_______________________________________________________________________________________________________


>>> I/O streams:

./example.py > filename.txt                 --> ">" the std output from "example.py" will be printed onto the file named "filename.txt" 
                                                (if file does not exist it is created)
                                                (file will be overwritten every time this event occours)
                                                
./example.py >> filename.txt                --> ">>" appends the std output from "example.py" onto the file named "filename.txt" 
                                                (does not overwrite existing data)

./example.py < filename.txt                 --> "<" "example.py" takes the "filename.txt" as a input for a user input field
                                                (reads up until a newline "\n" character)
                                                
                                                
./example.py 2> filename.txt                --> "2>" only the err (error) output from "example.py" will get printed onto the "filename.txt" file



                                                





